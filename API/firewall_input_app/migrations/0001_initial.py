# Generated by Django 2.1.3 on 2019-04-27 15:18

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import rest_framework.compat


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('config_app', '0044_hostname'),
        ('entity_app', '0005_auto_20180626_1607'),
    ]

    operations = [
        migrations.CreateModel(
            name='Apply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status',
                 models.CharField(choices=[('pending', 'pending'), ('failed', 'failed'), ('succeeded', 'succeeded')],
                                  max_length=10)),
                ('time', models.PositiveSmallIntegerField(default=1,
                                                          validators=[rest_framework.compat.MaxValueValidator(100),
                                                                      rest_framework.compat.MinValueValidator(1)],
                                                          verbose_name='Duration Time for Drop log')),
                ('is_log_enabled', models.BooleanField(default=False, verbose_name='Is Log Enabled')),
            ],
        ),
        migrations.CreateModel(
            name='InputFirewall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('last_operation',
                 models.CharField(blank=True, choices=[('add', 'add'), ('delete', 'delete'), ('update', 'update')],
                                  max_length=20, null=True, verbose_name='Last Operation')),
                ('status', models.CharField(blank=True, choices=[('pending', 'pending'), ('failed', 'failed'),
                                                                 ('succeeded', 'succeeded'), ('disabled', 'disabled'),
                                                                 ('unapplied', 'unapplied')], max_length=20, null=True,
                                            verbose_name='Status')),
                ('permission',
                 models.CharField(choices=[('admin', 'admin'), ('system', 'system'), ('hidden', 'hidden')],
                                  default='admin', max_length=10)),
                ('is_log_enabled', models.BooleanField(default=True, verbose_name='Is Log Enabled')),
                ('service_list', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(
                    choices=[('https', 'https'), ('ssh', 'ssh'), ('ping', 'ping'), ('ipsec', 'ipsec')], max_length=10),
                                                                           size=None)),
                ('port', models.SmallIntegerField(blank=True, null=True, verbose_name='service port')),
            ],
            options={
                'verbose_name': 'Firewall Input',
                'verbose_name_plural': 'Firewall Inputs',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src_interface_list', models.ManyToManyField(blank=True, related_name='_source_src_interface_list_+',
                                                              to='config_app.Interface')),
                ('src_network_list', models.ManyToManyField(blank=True, related_name='_source_src_network_list_+',
                                                            to='entity_app.Address')),
            ],
        ),
        migrations.AddField(
            model_name='inputfirewall',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='firewall_input_app.Source', verbose_name='Source'),
        ),
    ]
