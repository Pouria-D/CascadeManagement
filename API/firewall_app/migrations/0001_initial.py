# Generated by Django 2.0.4 on 2018-04-15 12:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('entity_app', '0001_initial'),
        ('config_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NAT',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, max_length=80, null=True, verbose_name='Description')),
                ('nat_type',
                 models.CharField(choices=[('SNAT', 'SNAT'), ('DNAT', 'DNAT')], max_length=4, verbose_name='NAT Type')),
                ('snat_type',
                 models.CharField(blank=True, choices=[('interface_ip', 'Interface IP'), ('static_ip', 'Static IP')],
                                  max_length=15, null=True, verbose_name='SNAT Type')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('port', models.CharField(blank=True, max_length=10, null=True, verbose_name='Port')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Is Enabled')),
                ('is_connected_to_policy', models.BooleanField(default=False, verbose_name='Is Connected to Policy')),
                ('next_policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                  related_name='+', to='firewall_app.NAT')),
                ('schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                               to='entity_app.Schedule', verbose_name='Schedule')),
            ],
        ),
        migrations.CreateModel(
            name='PBR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Is Enabled')),
                ('is_connected_to_policy', models.BooleanField(default=False, verbose_name='Is Connected to Policy')),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=6, verbose_name='Action')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Is Enabled')),
                ('is_log_enabled', models.BooleanField(default=True, verbose_name='Is Log Enabled')),
                ('is_ipsec', models.BooleanField(default=False, verbose_name='Is Ipsec')),
                ('last_operation',
                 models.CharField(blank=True, choices=[('add', 'add'), ('delete', 'delete'), ('update', 'update')],
                                  max_length=20, null=True, verbose_name='Last Operation')),
                ('status', models.CharField(blank=True, choices=[('pending', 'pending'), ('failed', 'failed'),
                                                                 ('succeeded', 'succeeded'), ('disabled', 'disabled')],
                                            max_length=20, null=True, verbose_name='Status')),
                ('nat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                          to='firewall_app.NAT', verbose_name='NAT')),
                ('next_policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                  related_name='+', to='firewall_app.Policy')),
                ('pbr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                          to='firewall_app.PBR', verbose_name='PBR')),
                ('schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                               to='entity_app.Schedule', verbose_name='Schedule')),
            ],
            options={
                'verbose_name': 'Policy',
                'verbose_name_plural': 'Policies',
            },
        ),
        migrations.CreateModel(
            name='SourceDestination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src_geoip_country_list',
                 models.ManyToManyField(blank=True, related_name='_sourcedestination_dst_geoip_country_list_+',
                                        to='entity_app.CountryCode')),
                ('dst_geoip_country_list',
                 models.ManyToManyField(blank=True, related_name='_sourcedestination_src_geoip_country_list_+',
                                        to='entity_app.CountryCode')),
                ('dst_interface_list',
                 models.ManyToManyField(blank=True, related_name='_sourcedestination_dst_interface_list_+',
                                        to='config_app.Interface')),
                ('dst_network_list',
                 models.ManyToManyField(blank=True, related_name='_sourcedestination_dst_network_list_+',
                                        to='entity_app.Address')),
                ('service_list', models.ManyToManyField(blank=True, related_name='_sourcedestination_service_list_+',
                                                        to='entity_app.Service')),
                ('src_interface_list',
                 models.ManyToManyField(blank=True, related_name='_sourcedestination_src_interface_list_+',
                                        to='config_app.Interface')),
                ('src_network_list',
                 models.ManyToManyField(blank=True, related_name='_sourcedestination_src_network_list_+',
                                        to='entity_app.Address')),
            ],
        ),
        migrations.AddField(
            model_name='policy',
            name='source_destination',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='firewall_app.SourceDestination', verbose_name='Source_Destination'),
        ),
        migrations.AddField(
            model_name='pbr',
            name='source_destination',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firewall_app.SourceDestination',
                                    verbose_name='Source_Destination'),
        ),
        migrations.AddField(
            model_name='nat',
            name='source_destination',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firewall_app.SourceDestination',
                                    verbose_name='Source_Destination'),
        ),
    ]
